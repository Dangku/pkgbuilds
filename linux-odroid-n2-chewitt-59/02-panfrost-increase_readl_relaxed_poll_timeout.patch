commit 66be151791825b4c15bf1bba9627247efc36b04f
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Fri Sep 25 09:44:54 2020 +0000

    HACK: drm/panfrost: increase readl_relaxed_poll_timeout values
    
    Amlogic SoC devices report the following errors frequently causing excessive
    dmesg log spam and early log rotataion, although the errors appear to be
    harmless as everything works fine:
    
    [    7.202702] panfrost ffe40000.gpu: error powering up gpu L2
    [    7.203760] panfrost ffe40000.gpu: error powering up gpu shader
    
    ARM staff have advised increasing the timeout values to eliminate the errors
    in most normal scenarios, and testing with several different G31/G52 devices
    shows 20000 to be a reliable value.
    
    Fixes: f3ba91228e8e ("drm/panfrost: Add initial panfrost driver")
    Suggested-by: Steven Price <steven.price@arm.com>
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>

diff --git a/drivers/gpu/drm/panfrost/panfrost_gpu.c b/drivers/gpu/drm/panfrost/panfrost_gpu.c
index f2c1ddc41a9b..e2358346b87b 100644
--- a/drivers/gpu/drm/panfrost/panfrost_gpu.c
+++ b/drivers/gpu/drm/panfrost/panfrost_gpu.c
@@ -324,15 +324,15 @@ void panfrost_gpu_power_on(struct panfro
 	/* Just turn on everything for now */
 	gpu_write(pfdev, L2_PWRON_LO, pfdev->features.l2_present);
 	ret = readl_relaxed_poll_timeout(pfdev->iomem + L2_READY_LO,
-		val, val == pfdev->features.l2_present, 100, 1000);
-	/* if (ret)
-		dev_err(pfdev->dev, "error powering up gpu L2"); */
+		val, val == pfdev->features.l2_present, 100, 20000);
+	if (ret)
+		dev_err(pfdev->dev, "error powering up gpu L2");
 
 	gpu_write(pfdev, SHADER_PWRON_LO, pfdev->features.shader_present);
 	ret = readl_relaxed_poll_timeout(pfdev->iomem + SHADER_READY_LO,
-		val, val == pfdev->features.shader_present, 100, 1000);
-	/* if (ret)
-		dev_err(pfdev->dev, "error powering up gpu shader"); */
+		val, val == pfdev->features.shader_present, 100, 20000);
+	if (ret)
+		dev_err(pfdev->dev, "error powering up gpu shader");
 
 	gpu_write(pfdev, TILER_PWRON_LO, pfdev->features.tiler_present);
 	ret = readl_relaxed_poll_timeout(pfdev->iomem + TILER_READY_LO,
